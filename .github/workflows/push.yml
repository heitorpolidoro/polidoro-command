name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Flake 8
        uses: heitorpolidoro/flake8-with-PR-comments@v1
        env:
          GITHUB_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coveralls pytest-cov
          pip install -e .[test]
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        if: matrix.python-version != '3.9'
        run: |
          pytest

      - name: Run tests
        if: matrix.python-version == '3.9'
        run: |
          pytest --cov --cov-report=xml

      - name: Send to Coverall
        env:
          GITHUB_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}
        if: matrix.python-version == '3.9'
        run: COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }} coveralls

  set-auto-merge:
    name: Set Pull Request do Automerge
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action != 'synchronize'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setting to Automerge
        uses: heitorpolidoro/automerge-pr@v1
        env:
          heitorpolidoro: ${{ secrets.HEITORPOLIDORO_PAT }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - tests
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: release
        if: github.event_name == 'push' || github.event.pull_request.merged == true
        uses: heitorpolidoro/auto-release@v1
        with:
          version_file: polidoro_command/__init__.py
        env:
          GITHUB_TOKEN: ${{ secrets.HEITORPOLIDORO_PAT }}


  deploy:
    name: Publish in PyPi
    runs-on: ubuntu-latest
    needs: create-release
    if: $${{ github.event_name == 'push' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --verbose
